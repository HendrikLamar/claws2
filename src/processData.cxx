// =====================================================================================
// 
//       Filename:  processData.cxx
// 
//    Description:  
// 
//        Version:  1.0
//        Created:  06.10.2017 08:07:39
//       Revision:  none
//       Compiler:  g++
// 
//         Author:  Hendrik Windel (hw), hwindel@mpp.mpg.de
//        Company:  Max Planck Institute for Physics
//        License:  GPLv3 - 2017, Hendrik Windel 
// 
// =====================================================================================

#include "utility.h"
#include "processData.h"
#include "storage.h"



///////////////////////////////////////////////////////////////////////////////
//
//              START Con- & Destructor
//
///////////////////////////////////////////////////////////////////////////////




ProcessData::ProcessData() :
    m_save( new Storage() )
{}







///////////////////////////////////////////////////////////////////////////////






ProcessData::ProcessData( Utility::Pico_Data_Pico* config ) :
    m_config_data( config ),
    m_save( new Storage() )
{}







///////////////////////////////////////////////////////////////////////////////






ProcessData::~ProcessData()
{
    delete m_save;
    m_save = nullptr;

}







///////////////////////////////////////////////////////////////////////////////
//
//              END Con- & Destructor
//
///////////////////////////////////////////////////////////////////////////////
























































///////////////////////////////////////////////////////////////////////////////
//
//              START Public Member Functions 
//
///////////////////////////////////////////////////////////////////////////////





Storage* ProcessData::save()
{
    return m_save;
}







///////////////////////////////////////////////////////////////////////////////








void ProcessData::setData(
        Utility::Claws_Gain gain,
        pico_data_raw* data )
{
    m_current_gain = gain;


    return;
}







///////////////////////////////////////////////////////////////////////////////







void ProcessData::setConfig( Utility::Pico_Data_Pico* config )
{
    m_config_data = config;


    return;
}











///////////////////////////////////////////////////////////////////////////////
//
//              END Public Member Functions
//
///////////////////////////////////////////////////////////////////////////////
